#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Long qw(:config no_ignore_case bundling);

my $FRED = $ENV{FRED_HOME};
die "Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

my $FREDRESULTS = $ENV{FRED_RESULTS};
$FREDRESULTS = "$ENV{FRED_HOME}/RESULTS" if not $FREDRESULTS;

my $help = "";
my $key = "";
my $dir = "OUT";
my $opt_result = GetOptions(
			    "help" => \$help,
			    "h" => \$help,
			    "k=s" => \$key,
			    "key=s" => \$key,
			    "d=s" => \$dir,
);

my $usage = <<EOH;
usage: $0 --help | [ -k key | -d $dir]
    -k or --key   the key for a FRED job (no default)
    -d            if no key, the OUT directory (default = OUT)
EOH

die $usage if $help;

if ($key) {
  my $id = `fred_id $key`;
  chomp $id;
  die "$0: UNKNOWN key: $key\n$usage\n" if $id eq "UNKNOWN";
  $dir = "$FREDRESULTS/JOB/$id/OUT";
}

my @places = qw/X H N S W/;
my @names = qw/newIMP newHH newNBR newSCH newWRK/;
my @counts = ();
my @ave = ();
my $n = 0;

for my $j (0..4) {
  my $name = $names[$j];
  my $pcount = 0;
  for my $i (1..100) {
    my $outfile = "$dir/RUN$i/DAILY/$name.txt";
    # print "outfile = |$outfile|\n";
    if (-e $outfile) {
      # print "open $outfile\n";
      open FH, $outfile or die "$0:Can't read file |$outfile|\n";
      while (my $line = <FH>) {
	chomp $line;
	my ($day, $data) = split " ", $line;
	$pcount += $data;
      }
      close FH;
    }
  }
  $counts[$j] = $pcount;
  $n += $pcount;
}
close FH;

for my $j (0..4) {
  $ave[$j] = 0;
  $ave[$j] = 100.0 * $counts[$j] / $n if $n > 0;
}

print "\nobserved:\n";
for my $j (0..4) {
  printf "%s %0.2f %d\n", $places[$j], $ave[$j], $counts[$j];
}

open FH, ">places.dat";
printf FH "H %0.2f N %0.2f S %0.2f W %0.2f\n", $ave[1], $ave[2], $ave[3], $ave[4];
close FH;
exit;

