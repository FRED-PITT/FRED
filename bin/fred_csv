#!/usr/bin/perl
use strict;
use warnings;
use Env;
use Getopt::Long qw(:config no_ignore_case bundling);

my $FRED = $ENV{FRED_HOME};
die "$0: Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

my $FREDRESULTS = $ENV{FRED_RESULTS};
$FREDRESULTS = "$ENV{FRED_HOME}/RESULTS" if not $FREDRESULTS;

my $help = "";
my $key = "";
my $var = "";
my $run = 1;
my $dir = "OUT";
my $opt_result = GetOptions(
			    "help" => \$help,
			    "h" => \$help,
			    "k=s" => \$key,
			    "key=s" => \$key,
			    "run=i" => \$run,
			    "r=i" => \$run,
			    "n=i" => \$run,
			    "d=s" => \$dir,
			    "v=s" => \$var,
);

my $usage = <<EOH;
usage: $0 --help | -k key [-n run_number]
    -k or --key   the key for a FRED job (no default)
    -n or --run   if set, report a specific run number. default: --run 1
EOH

die $usage if $help;

my %vtofile = (
		S => "S",
		E => "E",
		I => "I",
		IM => "Im",
		M => "Im",
		CS => "CS",
		P => "P",
		Ps => "CS",
		PS => "CS",
		PIm => "Im",
		R => "R",

		C => "newC",
		newI => "newI",
		Cs => "newCS",
		CF => "newCF",
		newIM => "newIm",

		AR => "totC",
		TCF => "totCF",
		ARs => "totCS",
		ARS => "totCS",

		Is => "INF.Is",
		N => "Popsize",

		H => "newHH",
		HH => "newHH",
		Hh => "newHH",
		NBR => "newNBR",
		Nbr => "newNBR",
		SCH => "newSCH",
		Sch => "newSCH",
		CLS => "newCLS",
		Cls => "newCLS",
		OFF => "newOFF",
		Off => "newOFF",
		WRK => "newWRK",
		Wrk => "newWRK",
		HOS => "newHOS",
		Hos => "newHOS",
		IMP => "newIMP",
		Imp => "newIMP",
		X => "newIMP",
);

if ($key) {
  my $id = `fred_id $key`;
  chomp $id;
  die "$0: UNKNOWN key: $key\n$usage\n" if $id eq "UNKNOWN";
  $dir = "$FREDRESULTS/JOB/$id/OUT";
}

if ($var eq "") {
  my $csv = "$dir/RUN$run/out.csv";
  die "Can't find file |$csv|\n$usage\n" if not -e $csv;
  system "cat $csv";
}
else {
  my $file = $var;
  if (exists $vtofile{$var}) {
    $file = $vtofile{$var};
  }
  my $csv = "$dir/PLOT/DAILY/$file.csv";
  die "Can't find file |$file|\n$usage\n" if not -e $csv;
  system "cat $csv";
}
exit;

