#!/usr/bin/perl

##########################################################################################
## 
##  This file is part of the FRED system.
##
## Copyright (c) 2010-2012, University of Pittsburgh, John Grefenstette, Shawn Brown, 
## Roni Rosenfield, Alona Fyshe, David Galloway, Nathan Stone, Jay DePasse, 
## Anuroop Sriram, and Donald Burke
## All rights reserved.
##
## Copyright (c) 2013-2021, University of Pittsburgh, John Grefenstette, Robert Frankeny,
## David Galloway, Mary Krauland, Michael Lann, David Sinclair, and Donald Burke
## All rights reserved.
##
## FRED is distributed on the condition that users fully understand and agree to all terms of the 
## End User License Agreement.
##
## FRED is intended FOR NON-COMMERCIAL, EDUCATIONAL OR RESEARCH PURPOSES ONLY.
##
## See the file "LICENSE" for more information.
##
##########################################################################################

use strict;
use warnings;
use Env;
use Getopt::Long qw(:config no_ignore_case bundling);

my $FRED = $ENV{FRED_HOME};
die "$0: Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

my $FREDRESULTS = $ENV{FRED_RESULTS};
$FREDRESULTS = "$ENV{FRED_HOME}/RESULTS" if not $FREDRESULTS;

my $help = "";
my $key = "";
my $var = "C";
my $run = 1;
my $dir = "";
my $weekly = "";
my $opt_result = GetOptions(
          "help" => \$help,
          "h" => \$help,
          "k=s" => \$key,
          "key=s" => \$key,
          "var=s" => \$var,
          "v=s" => \$var,
          "run=i" => \$run,
          "r=i" => \$run,
          "n=i" => \$run,
          "d=s" => \$dir,
          "weekly" => \$weekly,
          "w" => \$weekly,
);

my $usage = <<EOH;
usage: $0 --help | -k key [-v variable] [-n run_number]
    -k or --key   the key for a FRED job (no default)
    -v or --var   the variable to be reported. default: report C
    -n or --run   if set, report a specific run number. default: 1
EOH

die $usage if $help;

my @data = `fred_csv -k $key -v $var -n $run`;
my $acc = 0;
my $i = 0;
# discard header line
shift @data;
for my $line (@data) {
  chomp $line;
  my @a = split ',', $line;
  my $val = $a[$#a];
  $acc += $val;
  print "$i $val $acc\n";
  $i++;
}
exit;
